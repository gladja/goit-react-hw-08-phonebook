{"version":3,"file":"static/js/111.7f872594.chunk.js","mappings":"iNAIaA,EAAS,WACpB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OACA,8BACGF,IACC,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAKhB,C,gKCbKC,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,GAASC,EAAAA,EAAAA,IAAO,CACpBH,OAAOI,EAAAA,EAAAA,MAASC,WAAWL,QAAQM,WACnCL,UAAUG,EAAAA,EAAAA,MAASG,IAAI,GAAGC,IAAI,IAAIF,aAIvBG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAazB,EAAAA,EAAAA,IAAY0B,EAAAA,KAE/BC,EAAAA,EAAAA,YAAU,WACRF,GAAcF,EAAS,YACxB,GAAE,CAACE,EAAYF,IAiBhB,OACE,iCACE,wBAAI,WAEJ,SAAC,KAAD,CACEb,cAAeA,EACfkB,SArBc,SAACC,EAAGC,GACtB,IAAMC,EAAW,CACfpB,MAAOkB,EAAElB,MACTC,SAAUiB,EAAEjB,UAGdS,GAASW,EAAAA,EAAAA,IAAUD,IAAWE,SAC3BC,MAAK,WACJC,EAAAA,GAAAA,QAAc,iBACf,IAAEC,OAAM,SAACC,GACVF,EAAAA,GAAAA,MAAY,wCACb,IACDL,EAAEQ,WACH,EASKC,iBAAkB1B,EAHpB,UAKE,UAAC,KAAD,YACE,6BAAO,UAEL,SAAC,KAAD,CAAO2B,KAAM,OAAQC,KAAM,QAASC,YAAa,WACjD,SAAC,KAAD,CAAcD,KAAK,QAAQE,UAAW,YAExC,mBAEA,6BAAO,aAEL,SAAC,KAAD,CAAOH,KAAM,WAAYC,KAAM,WAAYC,YAAa,YACxD,SAAC,KAAD,CAAcD,KAAK,iBAErB,mBACA,mBAAQD,KAAM,SAAd,SAAwB,iBAKjC,E,SC1DD,EAVc,WACZ,IAAMzC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OACE,8BACIF,GAAY,SAACD,EAAA,EAAD,KAAa,SAACsB,EAAD,KAGhC,C","sources":["components/Loader/Loader.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import { ThreeDots } from  'react-loader-spinner'\nimport { selectIsLoading } from '../../redux/selectors';\nimport { useSelector } from 'react-redux';\n\nexport const Loader = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n  <>\n    {isLoading &&\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#3f51b5\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    }\n  </>\n  )\n};\n","import { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../../redux/operations';\nimport { useNavigate } from 'react-router-dom';\nimport { selectLogIn } from '../../redux/selectors';\nimport { toast } from 'react-toastify';\n\n//* formik initialValues\nconst initialValues = {\n  email: '',\n  password: '',\n};\n//* formik schema\nconst schema = object({\n  email: string().nullable().email().required(),\n  password: string().min(8).max(16).required(),\n});\n\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectLogIn);\n\n  useEffect(() => {\n    isLoggedIn && navigate('/contacts');\n  }, [isLoggedIn, navigate]);\n\n  const handleLogin = (v, a) => {\n    const dataUser = {\n      email: v.email,\n      password: v.password,\n    };\n    // console.log(dataUser);\n    dispatch(loginUser(dataUser)).unwrap()\n      .then(() => {\n        toast.success('Login success!');\n      }).catch((e) => {\n      toast.error('Login error, Email or Password wrong!');\n    });\n    a.resetForm();\n  };\n\n  return (\n    <>\n      <h2>Login</h2>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleLogin}\n        validationSchema={schema}\n      >\n        <Form>\n          <label>\n            Email:\n            <Field type={'text'} name={'email'} placeholder={'email'} />\n            <ErrorMessage name='email' component={'div'} />\n          </label>\n          <br />\n\n          <label>\n            Password:\n            <Field type={'password'} name={'password'} placeholder={'******'} />\n            <ErrorMessage name='password' />\n          </label>\n          <br />\n          <button type={'submit'}>Login</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","import { LoginForm } from '../components/LoginForm/LoginForm';\nimport { Loader } from '../components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from '../redux/selectors';\n\nconst Login = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      { isLoading ? <Loader/> :  <LoginForm />}\n    </>\n  );\n};\n\nexport default Login\n"],"names":["Loader","isLoading","useSelector","selectIsLoading","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","initialValues","email","password","schema","object","string","nullable","required","min","max","LoginForm","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","selectLogIn","useEffect","onSubmit","v","a","dataUser","loginUser","unwrap","then","toast","catch","e","resetForm","validationSchema","type","name","placeholder","component"],"sourceRoot":""}