{"version":3,"file":"static/js/236.94b48c48.chunk.js","mappings":"iNAIaA,EAAS,WACpB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OACA,8BACGF,IACC,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAKhB,C,gKCbKC,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,GAASC,EAAAA,EAAAA,IAAO,CACpBJ,MAAMK,EAAAA,EAAAA,MAASC,WACfL,OAAOI,EAAAA,EAAAA,MAASE,WAAWN,QAAQK,WACnCJ,UAAUG,EAAAA,EAAAA,MAASG,IAAI,GAAGC,IAAI,IAAIH,aAGvBI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAa1B,EAAAA,EAAAA,IAAY2B,EAAAA,KAE/BC,EAAAA,EAAAA,YAAU,WACRF,GAAcF,EAAS,YACxB,GAAE,CAACE,EAAYF,IAmBhB,OACE,iCACE,wBAAI,cAEJ,SAAC,KAAD,CACEd,cAAeA,EACfmB,SAvBe,SAACC,EAAGC,GACvBC,QAAQC,IAAIF,GACZ,IAAMG,EAAW,CACfvB,KAAMmB,EAAEnB,KACRC,MAAOkB,EAAElB,MACTC,SAAUiB,EAAEjB,UAEdS,GAASa,EAAAA,EAAAA,IAAaD,IAAWE,SAC9BC,MAAK,WACJC,EAAAA,GAAAA,QAAc,oBACf,IAAEC,OAAM,SAACC,GACVR,QAAQC,IAAIO,GACZF,EAAAA,GAAAA,MAAY,mBACb,IACDP,EAAEU,WACH,EASKC,iBAAkB5B,EAHpB,UAKE,UAAC,KAAD,YACE,6BAAO,SAEL,SAAC,KAAD,CAAO6B,KAAM,OAAQhC,KAAM,OAAQiC,YAAa,UAChD,SAAC,KAAD,CACEjC,KAAK,OACLkC,UAAW,YAGf,mBACA,6BAAO,UAEL,SAAC,KAAD,CAAOF,KAAM,OAAQhC,KAAM,QAASiC,YAAa,WACjD,SAAC,KAAD,CAAcjC,KAAK,QAAQkC,UAAW,YAExC,mBAEA,6BAAO,aAEL,SAAC,KAAD,CAAOF,KAAM,WAAYhC,KAAM,WAAYiC,YAAa,YACxD,SAAC,KAAD,CAAcjC,KAAK,iBAErB,mBACA,mBAAQgC,KAAM,SAAd,SAAwB,kBAKjC,E,SCtED,EAViB,WACf,IAAM5C,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OACE,8BACIF,GAAY,SAACD,EAAA,EAAD,KAAY,SAACuB,EAAD,KAG/B,C","sources":["components/Loader/Loader.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { ThreeDots } from  'react-loader-spinner'\nimport { selectIsLoading } from '../../redux/selectors';\nimport { useSelector } from 'react-redux';\n\nexport const Loader = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n  <>\n    {isLoading &&\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#3f51b5\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    }\n  </>\n  )\n};\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { registerUser } from '../../redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { selectLogIn } from '../../redux/selectors';\nimport { toast } from 'react-toastify';\n\n//formik initialValues\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n//formik schema\nconst schema = object({\n  name: string().required(),\n  email: string().nullable().email().required(),\n  password: string().min(8).max(16).required(),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectLogIn);\n\n  useEffect(() => {\n    isLoggedIn && navigate('/contacts');\n  }, [isLoggedIn, navigate]);\n\n  const handleSubmit = (v, a) => {\n    console.log(a);\n    const dataUser = {\n      name: v.name,\n      email: v.email,\n      password: v.password,\n    };\n    dispatch(registerUser(dataUser)).unwrap()\n      .then(() => {\n        toast.success('Register success!');\n      }).catch((e) => {\n      console.log(e);\n      toast.error('Duplicate, Email');\n    });\n    a.resetForm();\n  };\n\n  return (\n    <>\n      <h2>Register</h2>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Form>\n          <label>\n            Name:\n            <Field type={'text'} name={'name'} placeholder={'Name'} />\n            <ErrorMessage\n              name='name'\n              component={'div'}\n            />\n          </label>\n          <br />\n          <label>\n            Email:\n            <Field type={'text'} name={'email'} placeholder={'email'} />\n            <ErrorMessage name='email' component={'div'} />\n          </label>\n          <br />\n\n          <label>\n            Password:\n            <Field type={'password'} name={'password'} placeholder={'******'} />\n            <ErrorMessage name='password' />\n          </label>\n          <br />\n          <button type={'submit'}>Submit</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","import { RegisterForm } from '../components/RegisterForm/RegisterForm';\nimport { Loader } from '../components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from '../redux/selectors';\n\nconst Register = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      { isLoading ? <Loader/> : <RegisterForm /> }\n    </>\n  );\n};\n\nexport default Register\n"],"names":["Loader","isLoading","useSelector","selectIsLoading","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","initialValues","name","email","password","schema","object","string","required","nullable","min","max","RegisterForm","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","selectLogIn","useEffect","onSubmit","v","a","console","log","dataUser","registerUser","unwrap","then","toast","catch","e","resetForm","validationSchema","type","placeholder","component"],"sourceRoot":""}