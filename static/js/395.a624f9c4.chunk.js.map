{"version":3,"file":"static/js/395.a624f9c4.chunk.js","mappings":"4MAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,MAAnB,EACpBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EACvBC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAnB,E,mBCGnBC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXV,GAAWW,EAAAA,EAAAA,IAAYb,GAoB7B,OACE,+BACE,kBAAMc,SApBW,SAACC,GACpBA,EAAEC,iBACF,MAAyBD,EAAEE,OAAOC,SAA1BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACRC,EAAc,CAClBF,KAAMA,EAAKG,MACXF,OAAQA,EAAOE,OAEjB,MAA0B,KAAtBH,EAAKG,MAAMC,QAAyC,KAAxBH,EAAOE,MAAMC,OACpCC,EAAAA,GAAAA,QAAc,gDAEFtB,EAASuB,MAAK,SAAAC,GAAE,OAAIA,EAAGP,OAASA,EAAKG,KAArB,IAE5BE,EAAAA,GAAAA,QAAA,UAAiBL,EAAKG,MAAtB,6BAETX,GAASgB,EAAAA,EAAAA,IAAYN,SACrBN,EAAEa,cAAcC,QACjB,EAIG,WACE,6BAAO,QAEL,kBACEC,KAAK,OACLX,KAAK,OACLY,QAAQ,yHACRC,MAAM,yIAGNC,YAAY,6BAIhB,6BAAO,UAEL,kBACEH,KAAK,MACLX,KAAK,SACLY,QAAQ,yFACRC,MAAM,+FAENC,YAAY,kBAIhB,mBAAQH,KAAK,SAAb,SAAsB,oBAI7B,E,UCpDYI,EAAc,WACzB,IAAMvB,GAAWC,EAAAA,EAAAA,MACXV,GAAWW,EAAAA,EAAAA,IAAYb,GACvBK,GAASQ,EAAAA,EAAAA,IAAYT,GACrBG,GAAYM,EAAAA,EAAAA,IAAYP,GACxBG,GAAQI,EAAAA,EAAAA,IAAYL,IAE1B2B,EAAAA,EAAAA,YAAU,WACRxB,GAASyB,EAAAA,EAAAA,MACV,GAAE,CAACzB,IAEJ,IAKM0B,EAAoB,OAAGnC,QAAH,IAAGA,OAAH,EAAGA,EAAUG,QAAO,SAAAqB,GAC5C,OAAOA,EAAGP,KAAKmB,cAAcC,SAASlC,EAAOiC,cAC9C,IAED,OACE,0BACG/B,IAAa,wBAAI,eACjBE,IAAS,wBAAKA,IACd4B,IAAyB9B,GAAa8B,EAAqBG,KAAI,gBAAGC,EAAH,EAAGA,GAAItB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAC9D,4BACE,yBAAMD,KACN,4BACE,2BAAK,IAAEC,MACP,mBACEsB,QAAS,kBAnBA,SAACD,GACpB9B,GAASgC,EAAAA,EAAAA,IAAeF,IACxBjB,EAAAA,GAAAA,KAAW,mBACZ,CAgB0BoB,CAAaH,EAAnB,EADX,SAEC,WANKA,EADoD,MAerE,E,UC3CYI,EAAgB,WAC7B,IAAMlC,GAAWC,EAAAA,EAAAA,MACXP,GAASQ,EAAAA,EAAAA,IAAYT,GAMzB,OACE,0BACI,6BAAO,yBAEL,kBACE0C,SATW,SAAC/B,GACtBJ,GAASoC,EAAAA,EAAAA,IAAehC,EAAEE,OAAOK,OAClC,EAQWQ,KAAK,OACLC,QAAQ,yHACRC,MAAM,wBACNC,YAAY,aACZX,MAAOjB,QAKlB,ECXD,EAZiB,WACf,OACE,iCACE,wBAAI,mBACJ,SAACK,EAAD,KACA,wBAAI,cACJ,SAACmC,EAAD,KACA,SAACX,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","// import { Btn, Form, Input, Label } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { toast } from 'react-toastify';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = e.target.elements;\n    const newContacts = {\n      name: name.value,\n      number: number.value,\n    };\n    if (name.value.trim() === '' || number.value.trim() === '') {\n      return toast.warning('Please write First name Last name and number');\n    }\n    const isDoubleName = contacts.find(el => el.name === name.value);\n    if (isDoubleName) {\n      return toast.warning(`${name.value} is already in contacts`);\n    }\n    dispatch(addContacts(newContacts))\n    e.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            type='text'\n            name='name'\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\n            For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            // required\n            placeholder='First name Last name'\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            // required\n            placeholder='123-45-67'\n          />\n        </label>\n\n        <button type='submit'>Add contact</button>\n      </form>\n    </>\n  );\n};\n","// import { AiFillDelete } from 'react-icons/ai';\n// import { IconContext } from 'react-icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts, getAllContacts } from '../../redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { selectContacts, selectError, selectFilter, selectIsLoading } from '../../redux/contacts/selectors';\nimport { toast } from 'react-toastify';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  const handleDelete = (id) => {\n    dispatch(deleteContacts(id));\n    toast.info('Contact removed!');\n  };\n\n  const contactsFilterResult = contacts?.filter(el => {\n    return el.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  return (\n    <ul>\n      {isLoading && <h2>Loading...</h2>}\n      {error && <h3>{error}</h3>}\n      {contactsFilterResult && !isLoading && contactsFilterResult.map(({ id, name, number }) => (\n        <div key={id}>\n          <div>{name}</div>\n          <div>\n            <div> {number}</div>\n            <button\n              onClick={() => handleDelete(id)}\n            >\n              X\n            </button>\n          </div>\n        </div>\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/slice';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nexport const ContactFilter = () => {\nconst dispatch = useDispatch();\nconst filter = useSelector(selectFilter)\n\nconst contactsFilter = (e) => {\n  dispatch(filterContacts(e.target.value))\n};\n\n  return (\n    <div>\n        <label>\n          Find contacts by name\n          <input\n            onChange={contactsFilter}\n            type=\"text\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title='Find contacts by name'\n            placeholder='Write name'\n            value={filter}\n          />\n        </label>\n    </div>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactFilter } from '../components/ContactFilter/ContactFilter';\n\nconst Contacts = () => {\n  return (\n    <>\n      <h2>Add contacts </h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <ContactFilter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","target","elements","name","number","newContacts","value","trim","toast","find","el","addContacts","currentTarget","reset","type","pattern","title","placeholder","ContactList","useEffect","getAllContacts","contactsFilterResult","toLowerCase","includes","map","id","onClick","deleteContacts","handleDelete","ContactFilter","onChange","filterContacts"],"sourceRoot":""}