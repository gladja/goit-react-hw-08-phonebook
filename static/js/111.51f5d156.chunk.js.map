{"version":3,"file":"static/js/111.51f5d156.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import { ThreeDots } from  'react-loader-spinner'\nimport { useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\nimport { selectIsLoading } from '../../redux/auth/selectors';\n\nexport const Loader = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n  <>\n    {isLoading &&\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mt: 4 }}>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#3f51b5\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n      </Box>\n    }\n  </>\n  )\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useEffect } from 'react';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { object, string } from 'yup';\nimport { toast } from 'react-toastify';\nimport { Box, Button, TextField, Typography } from '@mui/material';\nimport { selectLogIn } from '../../redux/auth/selectors';\nimport { loginUser } from '../../redux/auth/operations';\n\n//* formik initialValues\nconst initialValues = {\n  email: '',\n  password: '',\n};\n//* formik schema\nconst schema = object({\n  email: string().nullable().email('Invalid email').required('Required field'),\n  password: string().min(8, 'Password must been more than 7 symbol').max(16).required('Required field'),\n});\n\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectLogIn);\n\n  useEffect(() => {\n    isLoggedIn && navigate('/contacts');\n  }, [isLoggedIn, navigate]);\n\n  const handleLogin = (v, a) => {\n    const dataUser = {\n      email: v.email,\n      password: v.password,\n    };\n    dispatch(loginUser(dataUser)).unwrap()\n      .then(() => {\n        toast.info('Login success!');\n      }).catch((e) => {\n      toast.error('Login error, Email or Password wrong!');\n    });\n    a.resetForm();\n  };\n\n\n  return (\n    <>\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4, px: 1}}>\n        <Box sx={{ width: 350, p: 4,  borderRadius: 4, boxShadow: '0px 10px 20px 2px rgba(0, 0, 0, 0.2)' }}>\n\n          <Typography variant=\"h5\" sx={{fontWeight: 'bolder', mb: 1, textTransform: 'uppercase'}}>Login</Typography>\n\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleLogin}\n            validationSchema={schema}\n          >\n            {({ isValid, dirty }) => (\n              <Form>\n                <Field\n                  type={'text'}\n                  name={'email'}\n                  as={TextField}\n                  variant='outlined'\n                  label='Email:'\n                  fullWidth\n                  size='small'\n                />\n                <ErrorMessage\n                  name='email'\n                  render={msg => (\n                    <Typography\n                      variant='caption' color={'red'}\n                      sx={{ ml: 1 }}>{msg}</Typography>\n                  )}\n                />\n                <Box sx={{ mb: 2 }} />\n                <Field\n                  type={'password'}\n                  name={'password'}\n                  as={TextField}\n                  variant='outlined'\n                  label='Password:'\n                  fullWidth\n                  size='small'\n                />\n                <ErrorMessage\n                  name='password'\n                  render={msg => (\n                    <Typography\n                      variant='caption' color={'red'}\n                      sx={{ ml: 1 }}>{msg}</Typography>\n                  )}\n                />\n                <Box sx={{ mb: 2 }} />\n                <Button\n                  fullWidth\n                  type={'submit'}\n                  variant='contained'\n                  size='large'\n                  aria-label=\"login user\"\n                  disabled={!isValid || !dirty}\n                >\n                  Login\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import { LoginForm } from '../components/LoginForm/LoginForm';\nimport { Loader } from '../components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from '../redux/auth/selectors';\n\nconst Login = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      {isLoading ? <Loader /> : <LoginForm />}\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["Loader","isLoading","useSelector","selectIsLoading","sx","display","justifyContent","alignItems","mt","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","initialValues","email","password","schema","object","string","nullable","required","min","max","LoginForm","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","selectLogIn","useEffect","Box","px","p","borderRadius","boxShadow","Typography","variant","fontWeight","mb","textTransform","onSubmit","v","a","dataUser","loginUser","unwrap","then","toast","catch","e","resetForm","validationSchema","isValid","dirty","type","name","as","TextField","label","fullWidth","size","render","msg","ml","Button","disabled"],"sourceRoot":""}