{"version":3,"file":"static/js/991.3e44a904.chunk.js","mappings":"2NAKaA,EAAS,WACpB,IAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAE9B,OACA,8BACGF,IACC,SAAC,IAAD,CAAKG,GAAI,CAAEC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,GAAI,GAAhF,UACA,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,OAMhB,C,iKC1BYC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,MAAnB,EACpBnB,EAAkB,SAAAe,GAAK,OAAIA,EAAMC,SAASlB,SAAnB,EACvBsB,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,E,mBCO1BC,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IAGJC,GAASC,EAAAA,EAAAA,IAAO,CACpBH,MAAMI,EAAAA,EAAAA,IAAO,gBAAgBC,SAAS,kBACtCJ,QAAQG,EAAAA,EAAAA,IAAO,kBAAkBC,SAAS,oBAG/BC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXf,GAAWjB,EAAAA,EAAAA,IAAYe,GAoB7B,OACE,+BACE,SAACkB,EAAA,EAAD,CAAK/B,GAAI,CAAEC,QAAS,OAAQC,eAAgB,SAAUE,GAAI,EAAG4B,GAAI,GAAjE,UACE,UAACD,EAAA,EAAD,CAAK/B,GAAI,CAAEM,MAAO,IAAK2B,EAAG,EAAGC,aAAc,EAAGC,UAAW,wCAAzD,WAEE,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,SAAUtC,GAAI,CAAEuC,WAAY,SAAUC,GAAI,EAAGC,cAAe,aAA5F,SAA2G,kBAE3G,SAAC,KAAD,CACEpB,cAAeA,EACfqB,SA3BW,SAACC,EAAGC,GACvB,IAAMC,EAAc,CAClBvB,KAAMqB,EAAErB,KACRC,OAAQoB,EAAEpB,QAEZ,MAAsB,KAAlBoB,EAAErB,KAAKwB,QAAqC,KAApBH,EAAEpB,OAAOuB,OAC5BC,EAAAA,GAAAA,QAAc,gDAEFhC,EAASiC,MAAK,SAAAC,GAAE,OAAIA,EAAG3B,OAASqB,EAAErB,IAAlB,IAE5ByB,EAAAA,GAAAA,QAAA,UAAiBJ,EAAErB,KAAnB,6BAETO,GAASqB,EAAAA,EAAAA,IAAYL,IAErBD,EAAEO,iBACFJ,EAAAA,GAAAA,KAAW,iBACZ,EAYSK,iBAAkB5B,EAHpB,SAKG,gBAAG6B,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAZ,OACD,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,KAAK,OACLjC,KAAK,OACLkC,GAAIC,EAAAA,EACJpB,QAAQ,WACRqB,MAAM,QACNC,WAAS,EACTC,KAAK,WAEP,SAAC,KAAD,CACEtC,KAAK,OACLuC,OAAQ,SAAAC,GAAG,OACT,SAAC1B,EAAA,EAAD,CACEC,QAAQ,UAAU7B,MAAO,MACzBR,GAAI,CAAE+D,GAAI,GAFZ,SAEkBD,GAHT,KAMb,SAAC/B,EAAA,EAAD,CAAK/B,GAAI,CAAEwC,GAAI,MAGf,SAAC,KAAD,CACEe,KAAK,MACLjC,KAAK,SACLkC,GAAIC,EAAAA,EACJpB,QAAQ,WACRqB,MAAM,UACNC,WAAS,EACTC,KAAK,WAEP,SAAC,KAAD,CACEtC,KAAK,SACLuC,OAAQ,SAAAC,GAAG,OACT,SAAC1B,EAAA,EAAD,CACEC,QAAQ,UAAU7B,MAAO,MACzBR,GAAI,CAAE+D,GAAI,GAFZ,SAEkBD,GAHT,KAMb,SAAC/B,EAAA,EAAD,CAAK/B,GAAI,CAAEwC,GAAI,MAEf,SAACwB,EAAA,EAAD,CACEL,WAAS,EACTJ,KAAM,SACNlB,QAAQ,YACRuB,KAAK,QACL,aAAW,cACXK,UAAWZ,IAAYC,EANzB,SAOC,kBAhDF,UA0DZ,E,wFCvGYY,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAI7C,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC/BM,GAAWC,EAAAA,EAAAA,MACjB,GAAkCsC,EAAAA,EAAAA,UAAS9C,GAA3C,eAAO+C,EAAP,KAAkBC,EAAlB,KACA,GAAsCF,EAAAA,EAAAA,UAAS7C,GAA/C,eAAOgD,EAAP,KAAoBC,EAApB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAaA,OAEI,SAACC,EAAA,GAAD,CAAUC,gBAAc,EAAxB,UACE,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAG/E,GAAI,CAAEC,QAAS,OAAQE,WAAY,UAA/D,WACE,UAAC0E,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACGR,IAAW,SAACrC,EAAA,EAAD,UAAad,KACvBmD,IACA,SAAChB,EAAA,EAAD,CACAF,KAAK,OACLjC,KAAM,OACNsC,KAAK,QACLsB,MAAOb,EACPc,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBd,EAAac,EAAOF,MAApC,QAGd,UAACL,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACGR,IAAW,SAACrC,EAAA,EAAD,UAAab,KACvBkD,IACA,SAAChB,EAAA,EAAD,CACAF,KAAK,OACLjC,KAAM,SACNsC,KAAK,QACLD,WAAS,EACTuB,MAAOX,EACPY,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBZ,EAAeY,EAAOF,MAAtC,QAGd,UAACL,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACGR,IAAW,SAACY,EAAA,EAAD,CAAYrF,GAAI,CAAE,UAAW,CAAEQ,MAAO,YAAe,aAAW,eAAeoD,KAAK,QAAQ0B,QAAS,kBAAMZ,GAAW,EAAjB,EAArG,UACV,SAACa,EAAA,EAAD,OAEAd,IAAW,SAACY,EAAA,EAAD,CAAYrF,GAAI,CAAE,UAAW,CAAEQ,MAAO,YAAe,aAAW,eAAeoD,KAAK,QAAQ0B,QArC9F,SAACE,GACpBA,EAAEC,iBACFf,GAAW,GACX7C,GAAS6D,EAAAA,EAAAA,IAAe,CAAEvB,GAAAA,EAAI7C,KAAM+C,EAAW9C,OAAQgD,IACxD,EAiCsB,UACb,SAACoB,EAAA,EAAD,UAGF,SAACd,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACE,SAACI,EAAA,EAAD,CAAYrF,GAAI,CAAE,UAAW,CAAEQ,MAAO,YAAe,aAAW,cAAcoD,KAAK,QAAQ0B,QAAS,kBA/CzF,SAACnB,GACpBtC,GAAS+D,EAAAA,EAAAA,IAAezB,IACxBpB,EAAAA,GAAAA,KAAW,mBACZ,CA4CmH8C,CAAa1B,EAAnB,EAApG,UACE,SAAC2B,EAAA,EAAD,YAMb,EC7DYC,EAAc,WACzB,IAAMlE,GAAWC,EAAAA,EAAAA,MACXf,GAAWjB,EAAAA,EAAAA,IAAYe,GACvBK,GAASpB,EAAAA,EAAAA,IAAYmB,GACrBpB,GAAYC,EAAAA,EAAAA,IAAYC,GACxBqB,GAAQtB,EAAAA,EAAAA,IAAYqB,IAG1B6E,EAAAA,EAAAA,YAAU,WACRnE,GAASoE,EAAAA,EAAAA,MACV,GAAE,CAACpE,IAEJ,IAAMqE,EAAoB,OAAGnF,QAAH,IAAGA,OAAH,EAAGA,EAAUG,QAAO,SAAA+B,GAC5C,OAAOA,EAAG3B,KAAK6E,cAAcC,SAASlF,EAAOiF,cAC9C,IAED,OACE,+BACE,SAACpE,EAAA,EAAD,CAAK/B,GAAI,CAAEC,QAAS,OAAQC,eAAgB,UAA5C,UACE,SAAC6B,EAAA,EAAD,CAAK/B,GAAI,CAAEM,MAAO,IAAK0B,GAAI,GAA3B,UACE,UAACqE,EAAA,EAAD,WACGxG,IAAa,SAACD,EAAA,EAAD,IACZwB,IAAS,SAACgB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,SAAhC,SAA2ClB,IACrD8E,IAAyBrG,GAAaqG,EAAqBI,KAAI,gBAAGnC,EAAH,EAAGA,GAAI7C,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAC5D,SAAC2C,EAAD,CAAqBC,GAAIA,EAAI7C,KAAMA,EAAMC,OAAQA,GAAhC4C,EAD2C,YAQ3E,E,UC/BYoC,EAAgB,WAC3B,IAAM1E,GAAWC,EAAAA,EAAAA,MACXZ,GAASpB,EAAAA,EAAAA,IAAYmB,GAM3B,OACE,+BACE,SAACc,EAAA,EAAD,CAAK/B,GAAI,CAAEC,QAAS,OAAQC,eAAgB,SAAUE,GAAI,GAA1D,UACE,UAAC2B,EAAA,EAAD,CAAK/B,GAAI,CAAEM,MAAO,IAAK2B,EAAG,GAA1B,WAEE,SAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,SAAUtC,GAAI,CAAEuC,WAAY,SAAUC,GAAI,EAAGC,cAAe,aAA5F,SAA2G,cAE3G,SAACL,EAAA,EAAD,CAAYC,QAAQ,UAAUrC,GAAI,CAACwG,EAAG,EAAGC,UAAW,SAAUnG,MAAO,KAArE,SAA2E,2BAC3E,SAAC,KAAD,CAAQe,cAAe,CAACC,KAAM,IAA9B,UACE,SAAC,KAAD,WACE,SAAC,KAAD,CACE6D,SAfS,SAACK,GACtB3D,GAAS6E,EAAAA,EAAAA,IAAelB,EAAEJ,OAAOF,OAClC,EAcaA,MAAOhE,EACPqC,KAAK,OACLjC,KAAK,OACLkC,GAAIC,EAAAA,EACJpB,QAAQ,WACRqB,MAAM,cACNC,WAAS,EACTC,KAAK,oBASpB,EC9BD,EAViB,WACf,OACE,iCACE,SAAChC,EAAD,KACA,SAAC2E,EAAD,KACA,SAACR,EAAD,MAGL,C","sources":["components/Loader/Loader.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactOne/ContactOne.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { ThreeDots } from  'react-loader-spinner'\nimport { useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\nimport { selectIsLoading } from '../../redux/auth/selectors';\n\nexport const Loader = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n  <>\n    {isLoading &&\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mt: 4 }}>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#3f51b5\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n      </Box>\n    }\n  </>\n  )\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport { string, object } from 'yup';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { Box, Button, TextField, Typography } from '@mui/material';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContacts } from '../../redux/contacts/operations';\n\n//* formik initialValues\nconst initialValues = {\n  name: '',\n  number: '',\n};\n//* formik schema\nconst schema = object({\n  name: string('Invalid name').required('Required field'),\n  number: string('Invalid number').required('Required field'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (v, a) => {\n    const newContacts = {\n      name: v.name,\n      number: v.number,\n    };\n    if (v.name.trim() === '' || v.number.trim() === '') {\n      return toast.warning('Please write First name Last name and number');\n    }\n    const isDoubleName = contacts.find(el => el.name === v.name);\n    if (isDoubleName) {\n      return toast.warning(`${v.name} is already in contacts`);\n    }\n    dispatch(addContacts(newContacts));\n\n    a.resetForm();\n    toast.info('Contacts add!');\n  };\n\n  return (\n    <>\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4, px: 1 }}>\n        <Box sx={{ width: 350, p: 4, borderRadius: 4, boxShadow: '0px 10px 20px 2px rgba(0, 0, 0, 0.2)' }}>\n\n          <Typography variant='h5' align={'center'} sx={{ fontWeight: 'bolder', mb: 1, textTransform: 'uppercase' }}>Add contacts</Typography>\n\n          <Formik\n            initialValues={initialValues}\n            onSubmit={handleSubmit}\n            validationSchema={schema}\n          >\n            {({ isValid, dirty }) => (\n            <Form>\n              <Field\n                type='text'\n                name='name'\n                as={TextField}\n                variant='outlined'\n                label='Name:'\n                fullWidth\n                size='small'\n              />\n              <ErrorMessage\n                name='name'\n                render={msg => (\n                  <Typography\n                    variant='caption' color={'red'}\n                    sx={{ ml: 1 }}>{msg}</Typography>\n                )}\n              />\n              <Box sx={{ mb: 2 }} />\n\n\n              <Field\n                type='tel'\n                name='number'\n                as={TextField}\n                variant='outlined'\n                label='Number:'\n                fullWidth\n                size='small'\n              />\n              <ErrorMessage\n                name='number'\n                render={msg => (\n                  <Typography\n                    variant='caption' color={'red'}\n                    sx={{ ml: 1 }}>{msg}</Typography>\n                )}\n              />\n              <Box sx={{ mb: 2 }} />\n\n              <Button\n                fullWidth\n                type={'submit'}\n                variant='contained'\n                size='large'\n                aria-label=\"add contact\"\n                disabled={!isValid || !dirty}\n              >\n                Add contact\n              </Button>\n            </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { Grid, IconButton, ListItem, TextField, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { deleteContacts, updateContacts } from '../../redux/contacts/operations';\nimport { toast } from 'react-toastify';\n\nexport const ContactOne = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [inputName, setInputName] = useState(name);\n  const [inputNumber, setInputNumber] = useState(number);\n  const [onInput, setOnInput] = useState(true);\n\n  const handleDelete = (id) => {\n    dispatch(deleteContacts(id));\n    toast.info('Contact removed!');\n  };\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    setOnInput(true);\n    dispatch(updateContacts({ id, name: inputName, number: inputNumber }));\n  };\n\n  return (\n\n      <ListItem disablePadding>\n        <Grid container spacing={1} sx={{ display: 'flex', alignItems: 'center' }}>\n          <Grid item xs={6}>\n            {onInput && <Typography>{name}</Typography>}\n            {!onInput &&\n              <TextField\n              type='text'\n              name={'name'}\n              size='small'\n              value={inputName}\n              onChange={({ target }) => setInputName(target.value)}\n            />}\n          </Grid>\n          <Grid item xs={4}>\n            {onInput && <Typography>{number}</Typography>}\n            {!onInput &&\n              <TextField\n              type='text'\n              name={'number'}\n              size='small'\n              fullWidth\n              value={inputNumber}\n              onChange={({ target }) => setInputNumber(target.value)}\n            />}\n          </Grid>\n          <Grid item xs={1}>\n            {onInput && <IconButton sx={{ \"&:hover\": { color: \"#1565c0\" } }} aria-label=\"edit contact\" size=\"small\" onClick={() => setOnInput(false)}>\n              <EditIcon />\n            </IconButton>}\n            {!onInput && <IconButton sx={{ \"&:hover\": { color: \"#1565c0\" } }} aria-label=\"save contact\" size=\"small\" onClick={handleUpdate}>\n            <SaveIcon/>\n            </IconButton>}\n          </Grid>\n          <Grid item xs={1}>\n            <IconButton sx={{ \"&:hover\": { color: \"#7b1fa2\" } }} aria-label=\"del contact\" size=\"small\" onClick={() => handleDelete(id)}>\n              <DeleteIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </ListItem>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Box, List, Typography } from '@mui/material';\nimport { Loader } from '../Loader/Loader';\nimport { ContactOne } from '../ContactOne/ContactOne';\nimport { getAllContacts } from '../../redux/contacts/operations';\nimport { selectContacts, selectError, selectFilter, selectIsLoading } from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  const contactsFilterResult = contacts?.filter(el => {\n    return el.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  return (\n    <>\n      <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n        <Box sx={{ width: 420, px: 4 }}>\n          <List>\n            {isLoading && <Loader />}\n            { error && <Typography variant='h6' align={'center'}>{error}</Typography>}\n            {contactsFilterResult && !isLoading && contactsFilterResult.map(({ id, name, number }) => (\n                <ContactOne key={id} id={id} name={name} number={number}/>\n            ))}\n          </List>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport React from 'react';\nimport { Box, TextField, Typography } from '@mui/material';\nimport { Field, Form, Formik } from 'formik';\nimport { filterContacts } from '../../redux/contacts/slice';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const contactsFilter = (e) => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <>\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n        <Box sx={{ width: 350, p: 4, }}>\n\n          <Typography variant='h5' align={'center'} sx={{ fontWeight: 'bolder', mb: 1, textTransform: 'uppercase' }}>Contacts</Typography>\n\n          <Typography variant='caption' sx={{m: 1, textAlign: 'center', width: 350}}>Find contacts by name</Typography>\n          <Formik initialValues={{name: ''}} >\n            <Form>\n              <Field\n                onChange={contactsFilter}\n                value={filter}\n                type='text'\n                name='name'\n                as={TextField}\n                variant='outlined'\n                label='Write name:'\n                fullWidth\n                size='small'\n              />\n            </Form>\n          </Formik>\n\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactFilter } from '../components/ContactFilter/ContactFilter';\n\nconst Contacts = () => {\n  return (\n    <>\n      <ContactForm />\n      <ContactFilter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Loader","isLoading","useSelector","selectIsLoading","sx","display","justifyContent","alignItems","mt","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","selectContacts","state","contacts","items","selectFilter","filter","selectError","error","initialValues","name","number","schema","object","string","required","ContactForm","dispatch","useDispatch","Box","px","p","borderRadius","boxShadow","Typography","variant","align","fontWeight","mb","textTransform","onSubmit","v","a","newContacts","trim","toast","find","el","addContacts","resetForm","validationSchema","isValid","dirty","type","as","TextField","label","fullWidth","size","render","msg","ml","Button","disabled","ContactOne","id","useState","inputName","setInputName","inputNumber","setInputNumber","onInput","setOnInput","ListItem","disablePadding","Grid","container","spacing","item","xs","value","onChange","target","IconButton","onClick","Edit","e","preventDefault","updateContacts","Save","deleteContacts","handleDelete","Delete","ContactList","useEffect","getAllContacts","contactsFilterResult","toLowerCase","includes","List","map","ContactFilter","m","textAlign","filterContacts"],"sourceRoot":""}